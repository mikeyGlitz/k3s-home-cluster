---
- name: Generate CA Key pair
  block:
    - local_action: 
        module: shell
        cmd: openssl ecparam -genkey -name prime256v1 -noout -out key.pem
    - local_action: 
        module: shell
        cmd: openssl req -new -x509 -key key.pem -out ca.crt -days 370 -subj='/CN={{ ca_commonname}}/C={{ ca_country }}/ST={{ ca_state }}'
- name: Provision certificate-manager on Kubernetes
  block:
    - kubernetes.core.helm:
        chart_repo_url: https://charts.jetstack.io
        chart_ref: cert-manager
        name: cert-manager
        release_namespace: cert-manager
        create_namespace: yes
        values:
          installCRDs: 'true'
    - kubernetes.core.helm:
        chart_repo_url: https://charts.jetstack.io
        chart_ref: cert-manager-trust
        name: cert-manager-trust
        release_namespace: cert-manager
    - kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: ca-key-pair
            namespace: cert-manager
          type: kubernetes.io/tls
          data:
            tls.key: "{{ lookup('file', playbook_dir + '/key.pem') | b64encode }}"
            tls.crt: "{{ lookup('file', playbook_dir + '/ca.crt') | b64encode }}"
    - pause: minutes=3
    - kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: cluster-issuer
            namespace: cert-manager
          spec:
            ca:
              secretName: ca-key-pair
    - kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: trust.cert-manager.io/v1alpha1
          kind: Bundle
          metadata:
            name: ca-bundle
          spec:
            sources:
            # A Secret in the trust namespace created via a cert-manager Certificate
            - secret:
                name: "ca-key-pair"
                key: "tls.crt"
            target:
              # Data synced to the ConfigMap `my-org.com` at the key `root-certs.pem` in
              # every namespace.
              configMap:
                key: "ca.crt"
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/kubeconfig

---
- name: Deploy Kubernetes Resources
  block:
    - name: Generate Config-Map
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: proxy-config-template
            namespace: linkerd
          data:
            config.hcl: |
              vault {
                ssl {
                  ca_cert = "/vault/tls/ca.crt"
                }
                retry {
                  backoff = "1s"
                }
              }
              template {
                contents = <<EOH
                  {{ '{{' }} with secret "secret/keycloak/monitoring-proxy/credential" {{ '}}' }}
                  client_id = "{{ '{{' }} .Data.data.client_id {{ '}}' }}"
                  client_secret = "{{ '{{' }} .Data.data.client_secret {{ '}}' }}"
                  {{ '{{' }} end }}
                  cookie_secret = "{{ '{{' }} .Data.data.encryption_key {{ '}}' }}"
                  http_address = ":3000"
                  upstreams = [ "http://linkerd-web.linkerd.svc.cluster.local:8084/" ]
                  redirct_url = "https://monitoring.{{ domain }}"
                  provider = "keycloak"
                  login_url = "https://auth.{{ domain }}/realms/hausnet/protocol/openid-connect/auth"
                  redeem_url ="https://auth.{{ domain }}/realms/hausnet/protocol/openid-connect/token"
                  validate_url = "https://auth.{{ domain }}/realms/hausnet/protocol/openid-connect/userinfo"
                EOH
                destination = "/vault/secrets/oauth2-config.cfg"
                command = "/bin/sh -c \"kill -HUP $(pidof oauth2-proxy) || true\""
              }
    - name: Create deployment
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: linkerd-web-proxy
            namespace: linkerd
            annotations:
              linkerd.io/inject: enabled
          spec:
            selector:
              matchLabels:
                app: linkerd-web-proxy
            template:
              metadata:
                labels:
                  app: linkerd-web-proxy
                annotations:
                  vault.security.banzaicloud.io/vault-ct-configmap: proxy-config-template
                  vault.security.banzaicloud.io/vault-addr: https://vault.vault-system:8200
                  vault.security.banzaicloud.io/vault-tls-secret: vault-cert-tls
                  vault.security.banzaicloud.io/vault-role: default
              spec:
                containers:
                - name: linkerd-web-proxy
                  image: quay.io/oauth2-proxy/oauth2-proxy
                  ports:
                  - containerPort: 3000
                  args:
                    - --config="/vault/secrets/oauth2-config.cfg"
    - name: Create Service
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: linkerd-web-proxy
            namespace: linkerd
          spec:
            selector:
              app: linkerd-web-proxy
            ports:
            - port: 3000
              targetPort: 3000
    - name: Create Ingress
      k8s:
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress 
          metadata:
            name: linkerd-web-proxy
            namespace: linkerd
            annotations:
              kubernetes.io/ingress-class: traefik
              cert-manager.io/cluster-issuer: cluster-issuer
              traefik.ingress.kubernetes.io/redirect-entry-endpoint: "https"
              ingress.kubernetes.io/custom-request-headers: 15d-dst-override:linkerd.web.linkerd.svc.cluster.local:8084
          spec:
            rules:
              - host: "monitoring.haus.net"
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: linkerd-web-proxy
                          port:
                            number: 3000
            tls:
              - hosts:
                - "monitoring.haus.net"
                secretName: proxy-tls-cert
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/kubeconfig"
---
- name: Deploy Kubernetes Resources
  block:
    - name: Create Secret
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: proxy-client-creds
            namespace: linkerd
            annotations:
              vault.security.banzaicloud.io/vault-addr: "https://vault.vault-system.svc.cluster.local:8200"
              vault.security.banzaicloud.io/vault-role: "default"
              vault.security.banzaicloud.io/vault-path: "kubernetes"
              vault.security.banzaicloud.io/vault-skip-verify: "true"
          type: Opaque
          stringData:
            CLIENT_ID: vault:secret/data/keycloak/monitoring-proxy/credential#client_id
            CLIENT_SECRET: vault:secret/data/keycloak/monitoring-proxy/credential#client_secret
            ENCRYPTION_KEY: vault:secret/data/keycloak/monitoring-proxy/credential#encryption_key
    - name: Create configuration
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: gatekeeper-config
            namespace: linkerd
          data:
            gatekeeper.yaml: |
              discovery-url: https://auth.{{ domain }}/auth/realms/hausnet
              skip-upstream-tls-verify: false
              skip-openid-provider-tls-verify: true
              listen: ':3000'
              secure-cookie: false
              enable-logging: true
              enable-json-logging: true
              enable-default-deny: true
              enable-refresh-tokens: true
              enable-authorization-header: false
              debug: true
              ingress.enabled: true
              redirection-url: https://monitoring.{{ domain }}
              upstream-url: http://linkerd-web.linkerd.svc.cluster.local:8084/
    - name: Create deployment
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: linkerd-web-proxy
            namespace: linkerd
            annotations:
              linkerd.io/inject: enabled
          spec:
            selector:
              matchLabels:
                app: linkerd-web-proxy
            template:
              metadata:
                labels:
                  app: linkerd-web-proxy
              spec:
                containers:
                - name: linkerd-web-proxy
                  image: bitnami/keycloak-gatekeeper
                  ports:
                  - containerPort: 3000
                  args:
                    - /keycloak-gatekeeper
                    - --client-id=$(CLIENT_ID)
                    - --client-secret=$(CLIENT_SECRET)
                    - --encryption-key=$(COOKIE_SECRET)
                    - --config=/etc/config/gatekeeper.yaml
                  volumeMounts:
                    - name: gatekeeper-config
                      mountPath: /etc/config
                  env:
                    - name: CLIENT_ID
                      valueFrom:
                        secretKeyRef:
                          key: CLIENT_ID
                          name: proxy-client-creds
                    - name: CLIENT_SECRET
                      valueFrom:
                        secretKeyRef:
                          key: CLIENT_SECRET
                          name: proxy-client-creds
                    - name: COOKIE_SECRET
                      valueFrom:
                        secretKeyRef:
                          key: ENCRYPTION_KEY
                          name: proxy-client-creds
                volumes:
                  - name: gatekeeper-config
                    configMap:
                      name: gatekeeper-config
    - name: Create Service
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: linkerd-web-proxy
            namespace: linkerd
          spec:
            selector:
              app: linkerd-web-proxy
            ports:
            - port: 3000
              targetPort: 3000
    - name: Create Ingress
      k8s:
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress 
          metadata:
            name: linkerd-web-proxy
            namespace: linkerd
            annotations:
              kubernetes.io/ingress-class: traefik
              cert-manager.io/cluster-issuer: cluster-issuer
              traefik.ingress.kubernetes.io/redirect-entry-endpoint: "https"
              ingress.kubernetes.io/custom-request-headers: 15d-dst-override:linkerd.web.linkerd.svc.cluster.local:8084
          spec:
            rules:
              - host: "monitoring.haus.net"
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: linkerd-web-proxy
                          port:
                            number: 3000
            tls:
              - hosts:
                - "monitoring.haus.net"
                secretName: proxy-tls-cert
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/kubeconfig"
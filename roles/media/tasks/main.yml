---
- name: Deploy Media Stack
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/kubeconfig"
    KUBE_CONFIG_PATH: "/home/{{ ansible_user }}/kubeconfig"
  block:
    - name: Ensure project folder
      file: path="/home/{{ ansible_user }}/terraform/media" state=directory
    - name: Copy terraform scripts
      copy:
          dest: "/home/{{ ansible_user }}/terraform/media" # required. Remote absolute path where the file should be copied to. If I(src) is a directory, this must be a directory too. If I(dest) is a nonexistent path and if either I(dest) ends with "/" or I(src) is a directory, I(dest) is created. If I(src) and I(dest) are files, the parent directory of I(dest) isn't created: the task fails if it doesn't already exist.
          src: "{{ item }}" # not required. Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with "/", only inside contents of that directory are copied to destination. Otherwise, if it does not end with "/", the directory itself with all contents is copied. This behavior is similar to Rsync.
      with_items:
        - media.tf
        - terraform.tf
    - stat:
        path: "terraform/media/.terraform"
      register: terraform_initialized
    - shell:
        cmd: terraform init
        chdir: "terraform/media"
      when: terraform_initialized.stat.exists != true
    - name: Generate random password
      shell: "cat /proc/sys/kernel/random/uuid | sed 's/-//g'"
      register: ssh_password
    - debug: msg="{{ ssh_password.stdout_lines[0] }}"
    - name: Plan deployment
      terraform:
        project_path: "terraform/media" # required. The path to the root of the Terraform directory with the vars.tf/main.tf/etc to use.
        state: planned # not required. choices: planned;present;absent. Goal state of given stage/project
        plan_file: plan.out
        variables:
          ssh_password: "{{ ssh_password.stdout_lines[0] }}"
          plex_token: plex_token
    - name: Apply deployment
      terraform:
        project_path: "terraform/media" # required. The path to the root of the Terraform directory with the vars.tf/main.tf/etc to use.
        state: present # not required. choices: planned;present;absent. Goal state of given stage/project
        plan_file: plan.out
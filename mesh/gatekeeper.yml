apiVersion: v1
kind: ConfigMap
metadata:
  name: gatekeeper-config-template
  namespace: linkerd
  labels:
    app: linkerd-gatekeeper
data:
  config.hcl: |
    vault {
      ssl {
        ca_cert = "/vault/tls/ca.crt"
      }
      retry {
        backoff = "1s"
      }
    }
    template {
      contents = <<EOH
        {{ with secret "secret/linkerd/client"}}
        client-id: {{ .Data.data.client_id }}
        client-secret: {{ .Data.data.client_secret }}
        encryption-key: {{ .Data.data.encryption_key }}
        {{ end }}
        discovery-url: https://auth.haus.net/auth/realms/hausnet
        skip-upstream-tls-verify: false
        skip-openid-provider-tls-verify: true
        listen: ':3000'
        secure-cookie: false
        enable-logging: true
        enable-json-logging: true
        enable-default-deny: true
        enable-refresh-tokens: true
        enable-authorization-header: false
        debug: true
        ingress.enabled: true
        redirection-url: https://mesh.haus.net
        upstream-url: http://linkerd-web.linkerd.svc.cluster.local:8084/
      EOH
      destination = "/vault/secrets/gatekeeper.yaml"
      command     = "/bin/sh -c \"kill -HUP $(pidof /opt/louketo/louketo-proxy) || true\"" 
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkerd-gatekeeper
  namespace: linkerd
  annotations:
    linkerd.io/inject: enabled
spec:
  selector:
    matchLabels:
      app: linkerd-gatekeeper
  template:
    metadata:
      labels:
        app: linkerd-gatekeeper
      annotations:
        vault.security.banzaicloud.io/vault-tls-secret: "vault-tls"
        vault.security.banzaicloud.io/vault-addr: "https://vault.linkerd:8200"
        vault.security.banzaicloud.io/vault-role: "default"
        vault.security.banzaicloud.io/vault-ct-configmap: "gatekeeper-config-template"
    spec:
      containers:
      - name: linkerd-gatekeeper
        image: quay.io/louketo/louketo-proxy
        ports:
        - containerPort: 3000
        args:
          - --config=/vault/secrets/gatekeeper.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: linkerd-gatekeeper
spec:
  selector:
    app: linkerd-gatekeeper
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: linkerd-gatekeeper
  namespace: linkerd
  annotations:
    kubernetes.io/ingress.class: "traefik"
    cert-manager.io/cluster-issuer: "cluster-issuer"
    traefik.ingress.kubernetes.io/redirect-entry-point: "https"
    ingress.kubernetes.io/custom-request-headers: l5d-dst-override:linkerd-web.linkerd.svc.cluster.local:8084
spec:
  rules:
    - host: mesh.haus.net
      http:
        paths:
          - path: /
            backend:
                serviceName: linkerd-gatekeeper
                servicePort: 3000
  tls:
    - hosts:
      - mesh.haus.net
      secretName: linkerd-tls
